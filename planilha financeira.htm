<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>controle financeiro</title>
  <style>
    body {
      font-family: 'segoe ui', sans-serif;
      background: linear-gradient(135deg, #fff8e7, #e7f7ff);
      color: #444;
      display: flex;
      height: 100vh;
      margin: 0;
    }
    .sidebar {
      width: 220px;
      background: #fbeaff;
      padding: 20px;
      border-right: 2px solid #f0d8ff;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    .sidebar button {
      background: #ffd6e8;
      border: none;
      border-radius: 10px;
      padding: 10px;
      cursor: pointer;
      transition: 0.2s;
      font-size: 14px;
      text-align: left;
      text-transform: lowercase;
    }
    .sidebar button:hover,
    .sidebar button.active {
      background: #fcbad3;
      color: white;
    }
    .submenu {
      display: none;
      flex-direction: column;
      margin-left: 10px;
      gap: 5px;
    }
    .submenu button {
      background: #ffe6f2;
      font-size: 13px;
    }
    .submenu.show {
      display: flex;
    }
    .container {
      flex: 1;
      background: white;
      border-radius: 20px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
      margin: 20px;
      padding: 20px;
      overflow-y: auto;
    }
    h1 {
      text-align: center;
      color: #6a4c93;
      margin-bottom: 20px;
      text-transform: lowercase;
    }
    form {
      display: grid;
      grid-template-columns: 1fr 2fr 1fr 1fr auto;
      gap: 10px;
      margin-bottom: 20px;
    }
    input, select, button {
      padding: 8px;
      border-radius: 10px;
      border: 1px solid #ddd;
      font-size: 14px;
      text-transform: lowercase;
    }
    button.add-btn {
      background: #ffd6e8;
      border: none;
      cursor: pointer;
      transition: 0.2s;
    }
    button.add-btn:hover {
      background: #fcbad3;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      text-transform: lowercase;
    }
    th, td {
      padding: 10px;
      border-bottom: 1px solid #eee;
      text-align: center;
    }
    th {
      background: #e0d4f7;
      color: #4b3b6b;
    }
    tr:hover {
      background: #fdf6ff;
    }
    .total {
      text-align: right;
      font-weight: bold;
      margin-top: 10px;
      color: #444;
    }
    .delete-btn {
      background: #ffb3b3;
      border: none;
      border-radius: 8px;
      padding: 5px 10px;
      cursor: pointer;
      transition: 0.2s;
    }
    .delete-btn:hover {
      background: #ff8080;
      color: white;
    }
    #chart-container, #month-chart-container {
      width: 100%;
      max-width: 600px;
      margin: 20px auto;
    }
    #chart-container {
      display: none;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <div class="sidebar">
    <button id="inicio-toggle" class="active">in√≠cio</button>
    <button id="months-toggle">meses ‚ñæ</button>
    <div class="submenu" id="months-submenu">
      <button class="month-btn" data-month="janeiro">janeiro</button>
      <button class="month-btn" data-month="fevereiro">fevereiro</button>
      <button class="month-btn" data-month="mar√ßo">mar√ßo</button>
      <button class="month-btn" data-month="abril">abril</button>
      <button class="month-btn" data-month="maio">maio</button>
      <button class="month-btn" data-month="junho">junho</button>
      <button class="month-btn" data-month="julho">julho</button>
      <button class="month-btn" data-month="agosto">agosto</button>
      <button class="month-btn" data-month="setembro">setembro</button>
      <button class="month-btn" data-month="outubro">outubro</button>
      <button class="month-btn" data-month="novembro">novembro</button>
      <button class="month-btn" data-month="dezembro">dezembro</button>
    </div>
  </div>

  <div class="container">
    <h1 id="page-title">üå∏ comparativo anual üå∏</h1>

    <form id="expense-form" style="display: none;">
      <input type="date" id="date" required>
      <input type="text" id="desc" placeholder="descri√ß√£o" required>
      <select id="category">
        <option>alimenta√ß√£o</option>
        <option>transporte</option>
        <option>moradia</option>
        <option>lazer</option>
        <option>outros</option>
      </select>
      <input type="number" id="value" placeholder="r$" step="0.01" required>
      <button type="submit" class="add-btn">adicionar</button>
    </form>

    <table id="expense-table" style="display: none;">
      <thead>
        <tr>
          <th>data</th>
          <th>descri√ß√£o</th>
          <th>categoria</th>
          <th>valor (r$)</th>
          <th>a√ß√µes</th>
        </tr>
      </thead>
      <tbody id="expense-list">
      </tbody>
    </table>

    <div class="total" id="total-container" style="display: none;">total: r$ <span id="total">0.00</span></div>

    <div id="month-chart-container" style="display: none;">
      <canvas id="month-chart"></canvas>
    </div>

    <div id="chart-container">
      <canvas id="annual-chart"></canvas>
    </div>
  </div>

  <script>
    const form = document.getElementById('expense-form');
    const expenseList = document.getElementById('expense-list');
    const totalEl = document.getElementById('total');
    const pageTitle = document.getElementById('page-title');
    const monthButtons = document.querySelectorAll('.month-btn');
    const monthsToggle = document.getElementById('months-toggle');
    const monthsSubmenu = document.getElementById('months-submenu');
    const inicioToggle = document.getElementById('inicio-toggle');
    const expenseTable = document.getElementById('expense-table');
    const chartContainer = document.getElementById('chart-container');
    const totalContainer = document.getElementById('total-container');
    const monthChartContainer = document.getElementById('month-chart-container');
    let monthChart;

    let dataByMonth = {};
    let currentMonth = null;
    let annualChart;

    function renderExpenses() {
      expenseList.innerHTML = '';
      let total = 0;
      let categoryTotals = {};

      (dataByMonth[currentMonth] || []).forEach((item, index) => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${item.date}</td>
          <td>${item.desc}</td>
          <td>${item.category}</td>
          <td>r$ ${item.value.toFixed(2)}</td>
          <td><button class="delete-btn" data-index="${index}">excluir</button></td>
        `;
        expenseList.appendChild(row);
        total += item.value;
        categoryTotals[item.category] = (categoryTotals[item.category] || 0) + item.value;
      });
      totalEl.textContent = total.toFixed(2);

      document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const idx = e.target.getAttribute('data-index');
          dataByMonth[currentMonth].splice(idx, 1);
          renderExpenses();
        });
      });

      // gr√°fico de pizza por categoria
      const ctx = document.getElementById('month-chart').getContext('2d');
      if (monthChart) monthChart.destroy();
      monthChart = new Chart(ctx, {
        type: 'pie',
        data: {
          labels: Object.keys(categoryTotals),
          datasets: [{
            data: Object.values(categoryTotals),
            backgroundColor: [
              '#fcbad3', '#a0e7e5', '#b4f8c8', '#ffeeba', '#cdb4db'
            ]
          }]
        }
      });
    }

    form.addEventListener('submit', function(e) {
      e.preventDefault();

      const date = document.getElementById('date').value;
      const desc = document.getElementById('desc').value;
      const category = document.getElementById('category').value;
      const value = parseFloat(document.getElementById('value').value);

      if (!date || !desc || isNaN(value)) return;

      if (!dataByMonth[currentMonth]) dataByMonth[currentMonth] = [];
      dataByMonth[currentMonth].push({ date, desc, category, value });

      renderExpenses();
      form.reset();
    });

    monthButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        monthButtons.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        inicioToggle.classList.remove('active');
        currentMonth = btn.dataset.month;
        pageTitle.textContent = `üå∏ ${currentMonth} üå∏`;
        expenseTable.style.display = '';
        form.style.display = 'grid';
        chartContainer.style.display = 'none';
        totalContainer.style.display = 'block';
        monthChartContainer.style.display = 'block';
        renderExpenses();
      });
    });

    monthsToggle.addEventListener('click', () => {
      monthsSubmenu.classList.toggle('show');
    });

    inicioToggle.addEventListener('click', () => {
      inicioToggle.classList.add('active');
      monthButtons.forEach(b => b.classList.remove('active'));
      pageTitle.textContent = 'üå∏ comparativo anual üå∏';
      expenseTable.style.display = 'none';
      form.style.display = 'none';
      totalContainer.style.display = 'none';
      monthChartContainer.style.display = 'none';
      chartContainer.style.display = 'block';

      const monthNames = ["janeiro","fevereiro","mar√ßo","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"];
      const totals = monthNames.map(m => (dataByMonth[m] || []).reduce((acc, item) => acc + item.value, 0));

      if (annualChart) annualChart.destroy();

      const ctx = document.getElementById('annual-chart').getContext('2d');
      annualChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: monthNames,
          datasets: [{
            label: 'gastos (r$)',
            data: totals,
            backgroundColor: [
              '#fcbad3','#a0e7e5','#b4f8c8','#ffeeba','#cdb4db','#ffdac1','#e2f0cb','#cddafd','#ffc8dd','#b5ead7','#ffdfba','#c7ceea'
            ]
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    });

    // mostrar gr√°fico inicial ao carregar
    inicioToggle.click();
  </script>
</body>
</html>
